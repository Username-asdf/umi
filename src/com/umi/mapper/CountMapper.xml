<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.umi.mapper.CountMapper">
  <resultMap id="BaseResultMap" type="com.umi.pojo.Count">
    <id column="countId" jdbcType="BIGINT" property="countid" />
    <result column="countNum" jdbcType="BIGINT" property="countnum" />
    <result column="countLoginNum" jdbcType="BIGINT" property="countloginnum" />
    <result column="countDate" jdbcType="DATE" property="countdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    countId, countNum, countLoginNum, countDate
  </sql>
  <select id="selectByExample" parameterType="com.umi.pojo.CountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from count
    where countId = #{countid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from count
    where countId = #{countid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.umi.pojo.CountExample">
    delete from count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.umi.pojo.Count">
    insert into count (countId, countNum, countLoginNum, 
      countDate)
    values (#{countid,jdbcType=BIGINT}, #{countnum,jdbcType=BIGINT}, #{countloginnum,jdbcType=BIGINT}, 
      #{countdate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.umi.pojo.Count">
    insert into count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="countid != null">
        countId,
      </if>
      <if test="countnum != null">
        countNum,
      </if>
      <if test="countloginnum != null">
        countLoginNum,
      </if>
      <if test="countdate != null">
        countDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="countid != null">
        #{countid,jdbcType=BIGINT},
      </if>
      <if test="countnum != null">
        #{countnum,jdbcType=BIGINT},
      </if>
      <if test="countloginnum != null">
        #{countloginnum,jdbcType=BIGINT},
      </if>
      <if test="countdate != null">
        #{countdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.umi.pojo.CountExample" resultType="java.lang.Long">
    select count(*) from count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update count
    <set>
      <if test="record.countid != null">
        countId = #{record.countid,jdbcType=BIGINT},
      </if>
      <if test="record.countnum != null">
        countNum = #{record.countnum,jdbcType=BIGINT},
      </if>
      <if test="record.countloginnum != null">
        countLoginNum = #{record.countloginnum,jdbcType=BIGINT},
      </if>
      <if test="record.countdate != null">
        countDate = #{record.countdate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update count
    set countId = #{record.countid,jdbcType=BIGINT},
      countNum = #{record.countnum,jdbcType=BIGINT},
      countLoginNum = #{record.countloginnum,jdbcType=BIGINT},
      countDate = #{record.countdate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.umi.pojo.Count">
    update count
    <set>
      <if test="countnum != null">
        countNum = #{countnum,jdbcType=BIGINT},
      </if>
      <if test="countloginnum != null">
        countLoginNum = #{countloginnum,jdbcType=BIGINT},
      </if>
      <if test="countdate != null">
        countDate = #{countdate,jdbcType=DATE},
      </if>
    </set>
    where countId = #{countid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.umi.pojo.Count">
    update count
    set countNum = #{countnum,jdbcType=BIGINT},
      countLoginNum = #{countloginnum,jdbcType=BIGINT},
      countDate = #{countdate,jdbcType=DATE}
    where countId = #{countid,jdbcType=BIGINT}
  </update>
</mapper>