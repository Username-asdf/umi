<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.umi.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.umi.pojo.Comment">
    <id column="commId" jdbcType="BIGINT" property="commid" />
    <result column="postID" jdbcType="BIGINT" property="postid" />
    <result column="fkCommId" jdbcType="BIGINT" property="fkcommid" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="sendTime" jdbcType="TIMESTAMP" property="sendtime" />
    <result column="reportNum" jdbcType="BIGINT" property="reportnum" />
    <result column="likeNum" jdbcType="BIGINT" property="likenum" />
    <result column="hateNum" jdbcType="BIGINT" property="hatenum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.umi.pojo.Comment">
    <result column="comm" jdbcType="LONGVARCHAR" property="comm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    commId, postID, fkCommId, userId, sendTime, reportNum, likeNum, hateNum
  </sql>
  <sql id="Blob_Column_List">
    comm
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.umi.pojo.CommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.umi.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where commId = #{commid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where commId = #{commid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.umi.pojo.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.umi.pojo.Comment">
    insert into comment (commId, postID, fkCommId, 
      userId, sendTime, reportNum, 
      likeNum, hateNum, comm
      )
    values (#{commid,jdbcType=BIGINT}, #{postid,jdbcType=BIGINT}, #{fkcommid,jdbcType=BIGINT}, 
      #{userid,jdbcType=BIGINT}, #{sendtime,jdbcType=TIMESTAMP}, #{reportnum,jdbcType=BIGINT}, 
      #{likenum,jdbcType=BIGINT}, #{hatenum,jdbcType=BIGINT}, #{comm,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.umi.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commid != null">
        commId,
      </if>
      <if test="postid != null">
        postID,
      </if>
      <if test="fkcommid != null">
        fkCommId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="sendtime != null">
        sendTime,
      </if>
      <if test="reportnum != null">
        reportNum,
      </if>
      <if test="likenum != null">
        likeNum,
      </if>
      <if test="hatenum != null">
        hateNum,
      </if>
      <if test="comm != null">
        comm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commid != null">
        #{commid,jdbcType=BIGINT},
      </if>
      <if test="postid != null">
        #{postid,jdbcType=BIGINT},
      </if>
      <if test="fkcommid != null">
        #{fkcommid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="sendtime != null">
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportnum != null">
        #{reportnum,jdbcType=BIGINT},
      </if>
      <if test="likenum != null">
        #{likenum,jdbcType=BIGINT},
      </if>
      <if test="hatenum != null">
        #{hatenum,jdbcType=BIGINT},
      </if>
      <if test="comm != null">
        #{comm,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.umi.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commid != null">
        commId = #{record.commid,jdbcType=BIGINT},
      </if>
      <if test="record.postid != null">
        postID = #{record.postid,jdbcType=BIGINT},
      </if>
      <if test="record.fkcommid != null">
        fkCommId = #{record.fkcommid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.sendtime != null">
        sendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reportnum != null">
        reportNum = #{record.reportnum,jdbcType=BIGINT},
      </if>
      <if test="record.likenum != null">
        likeNum = #{record.likenum,jdbcType=BIGINT},
      </if>
      <if test="record.hatenum != null">
        hateNum = #{record.hatenum,jdbcType=BIGINT},
      </if>
      <if test="record.comm != null">
        comm = #{record.comm,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comment
    set commId = #{record.commid,jdbcType=BIGINT},
      postID = #{record.postid,jdbcType=BIGINT},
      fkCommId = #{record.fkcommid,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      sendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      reportNum = #{record.reportnum,jdbcType=BIGINT},
      likeNum = #{record.likenum,jdbcType=BIGINT},
      hateNum = #{record.hatenum,jdbcType=BIGINT},
      comm = #{record.comm,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set commId = #{record.commid,jdbcType=BIGINT},
      postID = #{record.postid,jdbcType=BIGINT},
      fkCommId = #{record.fkcommid,jdbcType=BIGINT},
      userId = #{record.userid,jdbcType=BIGINT},
      sendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      reportNum = #{record.reportnum,jdbcType=BIGINT},
      likeNum = #{record.likenum,jdbcType=BIGINT},
      hateNum = #{record.hatenum,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.umi.pojo.Comment">
    update comment
    <set>
      <if test="postid != null">
        postID = #{postid,jdbcType=BIGINT},
      </if>
      <if test="fkcommid != null">
        fkCommId = #{fkcommid,jdbcType=BIGINT},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="sendtime != null">
        sendTime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportnum != null">
        reportNum = #{reportnum,jdbcType=BIGINT},
      </if>
      <if test="likenum != null">
        likeNum = #{likenum,jdbcType=BIGINT},
      </if>
      <if test="hatenum != null">
        hateNum = #{hatenum,jdbcType=BIGINT},
      </if>
      <if test="comm != null">
        comm = #{comm,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where commId = #{commid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.umi.pojo.Comment">
    update comment
    set postID = #{postid,jdbcType=BIGINT},
      fkCommId = #{fkcommid,jdbcType=BIGINT},
      userId = #{userid,jdbcType=BIGINT},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      reportNum = #{reportnum,jdbcType=BIGINT},
      likeNum = #{likenum,jdbcType=BIGINT},
      hateNum = #{hatenum,jdbcType=BIGINT},
      comm = #{comm,jdbcType=LONGVARCHAR}
    where commId = #{commid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.umi.pojo.Comment">
    update comment
    set postID = #{postid,jdbcType=BIGINT},
      fkCommId = #{fkcommid,jdbcType=BIGINT},
      userId = #{userid,jdbcType=BIGINT},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      reportNum = #{reportnum,jdbcType=BIGINT},
      likeNum = #{likenum,jdbcType=BIGINT},
      hateNum = #{hatenum,jdbcType=BIGINT}
    where commId = #{commid,jdbcType=BIGINT}
  </update>
</mapper>