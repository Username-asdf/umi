<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.umi.mapper.RequestMapper">
  <resultMap id="BaseResultMap" type="com.umi.pojo.Request">
    <id column="requestId" jdbcType="BIGINT" property="requestid" />
    <result column="usersId" jdbcType="BIGINT" property="usersid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="accpet" jdbcType="BIGINT" property="accpet" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.umi.pojo.RequestWithBLOBs">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="descInfo" jdbcType="LONGVARCHAR" property="descinfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    requestId, usersId, time, accpet, finish
  </sql>
  <sql id="Blob_Column_List">
    title, descInfo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.umi.pojo.RequestExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.umi.pojo.RequestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from request
    where requestId = #{requestid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from request
    where requestId = #{requestid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.umi.pojo.RequestExample">
    delete from request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.umi.pojo.RequestWithBLOBs">
    insert into request (requestId, usersId, time, 
      accpet, finish, title, 
      descInfo)
    values (#{requestid,jdbcType=BIGINT}, #{usersid,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP}, 
      #{accpet,jdbcType=BIGINT}, #{finish,jdbcType=INTEGER}, #{title,jdbcType=LONGVARCHAR}, 
      #{descinfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.umi.pojo.RequestWithBLOBs">
    insert into request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="requestid != null">
        requestId,
      </if>
      <if test="usersid != null">
        usersId,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="accpet != null">
        accpet,
      </if>
      <if test="finish != null">
        finish,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="descinfo != null">
        descInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="requestid != null">
        #{requestid,jdbcType=BIGINT},
      </if>
      <if test="usersid != null">
        #{usersid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="accpet != null">
        #{accpet,jdbcType=BIGINT},
      </if>
      <if test="finish != null">
        #{finish,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="descinfo != null">
        #{descinfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.umi.pojo.RequestExample" resultType="java.lang.Long">
    select count(*) from request
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update request
    <set>
      <if test="record.requestid != null">
        requestId = #{record.requestid,jdbcType=BIGINT},
      </if>
      <if test="record.usersid != null">
        usersId = #{record.usersid,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accpet != null">
        accpet = #{record.accpet,jdbcType=BIGINT},
      </if>
      <if test="record.finish != null">
        finish = #{record.finish,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.descinfo != null">
        descInfo = #{record.descinfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update request
    set requestId = #{record.requestid,jdbcType=BIGINT},
      usersId = #{record.usersid,jdbcType=BIGINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      accpet = #{record.accpet,jdbcType=BIGINT},
      finish = #{record.finish,jdbcType=INTEGER},
      title = #{record.title,jdbcType=LONGVARCHAR},
      descInfo = #{record.descinfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update request
    set requestId = #{record.requestid,jdbcType=BIGINT},
      usersId = #{record.usersid,jdbcType=BIGINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      accpet = #{record.accpet,jdbcType=BIGINT},
      finish = #{record.finish,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.umi.pojo.RequestWithBLOBs">
    update request
    <set>
      <if test="usersid != null">
        usersId = #{usersid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="accpet != null">
        accpet = #{accpet,jdbcType=BIGINT},
      </if>
      <if test="finish != null">
        finish = #{finish,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="descinfo != null">
        descInfo = #{descinfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where requestId = #{requestid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.umi.pojo.RequestWithBLOBs">
    update request
    set usersId = #{usersid,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      accpet = #{accpet,jdbcType=BIGINT},
      finish = #{finish,jdbcType=INTEGER},
      title = #{title,jdbcType=LONGVARCHAR},
      descInfo = #{descinfo,jdbcType=LONGVARCHAR}
    where requestId = #{requestid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.umi.pojo.Request">
    update request
    set usersId = #{usersid,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      accpet = #{accpet,jdbcType=BIGINT},
      finish = #{finish,jdbcType=INTEGER}
    where requestId = #{requestid,jdbcType=BIGINT}
  </update>
</mapper>